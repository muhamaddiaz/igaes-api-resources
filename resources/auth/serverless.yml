org: muhamaddiaz
app: igaes-app
service: igaes-api-resources-auth

custom:
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  stage: dev
  region: ap-southeast-1

resources:
  Resources:
    IgaesUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:custom.stage}-IgaesUserPool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email

    IgaesUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:custom.stage}-IgaesUserPoolClient
        UserPoolId:
          Ref: IgaesUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false

    IgaesIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: ${self:custom.stage}-IgaesIdentityPool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId:
              Ref: IgaesUserPoolClient
            ProviderName:
              Fn::GetAtt:
                - IgaesUserPool
                - ProviderName

    IgaesAuthRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Federated: 'cognito-identity.amazonaws.com'
              Action:
                - 'sts:AssumeRoleWithWebIdentity'
              Condition:
                StringEquals:
                  'cognito-identity.amazonaws.com:aud':
                    Ref: IgaesIdentityPool
                'ForAnyValue:StringLike':
                  'cognito-identity.amazonaws.com:amr': authenticated
        Policies:
          - PolicyName: 'IgaesAuthorizedPolicy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: 'Allow'
                  Action:
                    - 'mobileanalytics:PutEvents'
                    - 'cognito-sync:*'
                    - 'cognito-identity:*'
                  Resource: '*'
                # Allow users to upload attachments to their
                # folder inside our S3 bucket
                - Effect: 'Allow'
                  Action:
                    - 's3:*'
                  Resource:
                    - Fn::Join:
                      - ''
                      -
                        - 'Fn::ImportValue': ${self:custom.stage}-ExtIgaesBucketArn
                        - '/private/'
                        - '$'
                        - '{cognito-identity.amazonaws.com:sub}/*'

  Outputs:
    UserPoolId:
      Value:
        Ref: IgaesUserPool

    UserPoolClientId:
      Value:
        Ref: IgaesUserPoolClient

    IdentityPoolId:
      Value:
        Ref: IgaesIdentityPool

    CognitoAuthRole:
      Value:
        Ref: IgaesAuthRole
      Export:
        Name: ExtIgaesAuthRole-${self:custom.stage}